# Generated by Django 5.1.2 on 2025-01-20 17:08

import core.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("path", models.CharField(max_length=255)),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
            },
        ),
        migrations.CreateModel(
            name="Variable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("NO_PROVIDER", "No provider"),
                            ("OPENAI", "OpenAI"),
                            ("OLLAMA", "Ollama"),
                        ]
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("value", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_type",
                    models.CharField(choices=[("EMBEDDING", "Embedding"), ("LLM", "LLM")]),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("NO_PROVIDER", "No provider"),
                            ("OPENAI", "OpenAI"),
                            ("OLLAMA", "Ollama"),
                        ]
                    ),
                ),
                ("model_name", models.CharField(max_length=255)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["provider", "model_name"],
                        name="core_model_provide_63062e_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Prompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "persona",
                    models.TextField(
                        default=core.models._get_default_persona_value,
                        help_text="It should include additional information to help guide the model's behavior and \n        understanding of its role.",
                    ),
                ),
                (
                    "instruction",
                    models.TextField(
                        default=core.models._get_default_instruction_value,
                        help_text='It should include guidelines on what is expected in the generated code, \n        such as "avoid complexity" or "minimize the code".',
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.project"),
                ),
            ],
            options={
                "verbose_name": "Prompt",
                "verbose_name_plural": "Prompts",
            },
        ),
        migrations.CreateModel(
            name="VectorizerModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vectorizer_type",
                    models.CharField(
                        choices=[
                            ("CHUNK_VECTORIZER", "File chunks"),
                            ("PYTHON_VECTORIZER", "Python structured"),
                        ],
                        default=core.models._get_default_vectorizer_value,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.project"),
                ),
            ],
            options={
                "verbose_name": "Vectorizer",
                "verbose_name_plural": "Vectorizers",
            },
        ),
        migrations.CreateModel(
            name="WorkflowResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.CharField(max_length=255)),
                ("embed_model", models.CharField(max_length=255, null=True)),
                ("prompt_model", models.CharField(max_length=255, null=True)),
                ("embeddings", models.TextField(null=True)),
                ("context", models.TextField(null=True)),
                ("llm_response", models.TextField(null=True)),
                ("modified_files", models.TextField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.project"),
                ),
            ],
            options={
                "verbose_name": "Workflow result",
                "verbose_name_plural": "Workflow results",
            },
        ),
    ]
